{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steve\\\\Documents\\\\Dev\\\\Tek3\\\\part-time\\\\B-PRO-500-NCE-5-1-professionalwork-steven.deffontaine\\\\epikodi\\\\epikodi\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [topRatedMovies, setTopRatedMovies] = useState([]);\n  const [upcomingMovies, setUpcomingMovies] = useState([]);\n  const [romanceMovies, setRomanceMovies] = useState([]);\n  const [kidMovies, setKidMovies] = useState([]);\n  const [dramaMovies, setDramaMovies] = useState([]);\n  const [horrorMovies, setHorrorMovies] = useState([]);\n  const [adventureMovies, setAdventureMovies] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const [mediaType, setMediaType] = useState('all');\n  const navigate = useNavigate();\n  const options = useMemo(() => ({\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMjIxMzZjYmRhNGE3NDkwMWIwMjNkMjA2NWY3ZDRiMCIsIm5iZiI6MTcyNjY2NzcyMC4wMjM4MjYsInN1YiI6IjY2ZWFkOTJlNWMwNTE5YTIzNGQzNjY2NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IHCx_EGrz_W_UfYue4zUZZM5uGcz7bYvQDl8ym_E7vw'\n    }\n  }), []);\n  const fetchFavorites = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/favorites', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setFavorites(data);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des favoris:', error);\n    }\n  };\n  const fetchMoviesByGenre = useCallback(async (genreId, setMovies) => {\n    try {\n      const allMovies = [];\n      for (let page = 1; page <= 5; page++) {\n        const response = await fetch(`https://api.themoviedb.org/3/discover/movie?language=fr-FR&page=${page}&with_genres=${genreId}`, options);\n        if (!response.ok) {\n          throw new Error('Erreur lors de la récupération des films par genre');\n        }\n        const data = await response.json();\n        allMovies.push(...data.results);\n      }\n      setMovies(allMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, [options]);\n  const toggleFavorite = async movie => {\n    try {\n      const token = localStorage.getItem('token');\n      const movieIdStr = movie.id.toString();\n      const isFavorite = favorites.some(fav => fav.movieId === movieIdStr);\n      if (isFavorite) {\n        const response = await fetch(`http://localhost:5000/api/favorites/${movieIdStr}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Erreur lors de la suppression du favori');\n        }\n      } else {\n        const response = await fetch('http://localhost:5000/api/favorites', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            movieId: movieIdStr,\n            movieData: movie\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Erreur lors de l\\'ajout du favori');\n        }\n      }\n      await fetchFavorites();\n    } catch (error) {\n      console.error('Erreur lors de la modification des favoris:', error);\n    }\n  };\n  const fetchSearchResults = useCallback(async (query, type) => {\n    if (!query) {\n      setSearchResults([]);\n      return;\n    }\n    try {\n      let endpoint = '';\n      if (type === 'all') {\n        endpoint = `/search/multi?query=${query}&language=fr-FR`;\n      } else if (type === 'movie') {\n        endpoint = `/search/movie?query=${query}&language=fr-FR`;\n      } else if (type === 'tv') {\n        endpoint = `/search/tv?query=${query}&language=fr-FR`;\n      } else if (type === 'documentary' || type === 'animation') {\n        const searchResponse = await fetch(`https://api.themoviedb.org/3/search/movie?query=${query}&language=fr-FR`, options);\n        const searchData = await searchResponse.json();\n        const genreId = type === 'documentary' ? 99 : 16;\n        const filteredResults = searchData.results.filter(movie => movie.genre_ids && movie.genre_ids.includes(genreId));\n        setSearchResults(filteredResults);\n        return;\n      }\n      const response = await fetch(`https://api.themoviedb.org/3${endpoint}`, options);\n      const data = await response.json();\n      setSearchResults(data.results || []);\n    } catch (error) {\n      console.error('Erreur lors de la recherche:', error);\n      setError('Erreur lors de la recherche');\n      setSearchResults([]);\n    }\n  }, [options]);\n  const fetchMovies = useCallback(async (category, setCategory) => {\n    try {\n      const allMovies = [];\n      for (let page = 1; page <= 10; page++) {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${category}?language=fr-FR&page=${page}`, options);\n        if (!response.ok) {\n          throw new Error('Erreur lors de la récupération des données');\n        }\n        const data = await response.json();\n        allMovies.push(...data.results);\n      }\n      setCategory(allMovies);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setLoading(false);\n    }\n  }, [options]);\n  useEffect(() => {\n    const delayDebounce = setTimeout(() => {\n      if (searchQuery) {\n        fetchSearchResults(searchQuery, mediaType);\n      }\n    }, 500);\n    return () => clearTimeout(delayDebounce);\n  }, [searchQuery, mediaType, fetchSearchResults]);\n  useEffect(() => {\n    fetchMovies('popular', setPopularMovies);\n    fetchMovies('top_rated', setTopRatedMovies);\n    fetchMovies('upcoming', setUpcomingMovies);\n    fetchMoviesByGenre(10749, setRomanceMovies); // Genre ID pour Romance\n    fetchMoviesByGenre(16, setKidMovies); // Genre ID pour Animation (Kid-friendly)\n    fetchMoviesByGenre(18, setDramaMovies); // Genre ID pour Drame\n    fetchMoviesByGenre(27, setHorrorMovies); // Genre ID pour Horreur\n    fetchMoviesByGenre(12, setAdventureMovies); // Genre ID pour Aventure\n    fetchFavorites();\n  }, [fetchMovies, fetchMoviesByGenre]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-text\",\n        children: \"Chargement des films...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Erreur: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 12\n    }, this);\n  }\n  const sliderSettings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 6,\n    slidesToScroll: 6,\n    responsive: [{\n      breakpoint: 1400,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 5\n      }\n    }, {\n      breakpoint: 1200,\n      settings: {\n        slidesToShow: 4,\n        slidesToScroll: 4\n      }\n    }, {\n      breakpoint: 992,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3\n      }\n    }, {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  const MovieList = ({\n    title,\n    movies\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      ...sliderSettings,\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieItem, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n  const MovieItem = ({\n    movie\n  }) => {\n    _s();\n    const navigate = useNavigate();\n    const isFavorite = favorites.some(fav => fav.movieId === movie.id.toString());\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `favorite-button ${isFavorite ? 'active' : ''}`,\n        onClick: () => toggleFavorite(movie),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"details-button\",\n        onClick: () => navigate(`/movie/${movie.id}`),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n        alt: movie.title,\n        className: \"movie-poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-title\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-release-date\",\n          children: [\"Date de sortie : \", movie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n  };\n  _s(MovieItem, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"D\\xE9connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Rechercher...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"type-select\",\n        value: mediaType,\n        onChange: e => setMediaType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"Tout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"movie\",\n          children: \"Films\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tv\",\n          children: \"S\\xE9ries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"documentary\",\n          children: \"Documentaires\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"animation\",\n          children: \"Animation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), searchQuery && searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(MovieList, {\n      title: \"R\\xE9sultats de la recherche\",\n      movies: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this) : searchQuery ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-results\",\n      children: \"Aucun r\\xE9sultat trouv\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [favorites.length > 0 && /*#__PURE__*/_jsxDEV(MovieList, {\n        title: \"Mes Favoris\",\n        movies: favorites.map(fav => fav.movieData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        title: \"Films Populaires\",\n        movies: popularMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        title: \"Les Mieux Not\\xE9s\",\n        movies: topRatedMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        title: \"Romance\",\n        movies: romanceMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        title: \"Animation pour les enfants\",\n        movies: kidMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        title: \"Drame\",\n        movies: dramaMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        title: \"Horreur\",\n        movies: horrorMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s2(Dashboard, \"hTVvAzUzBhvrV9JlcJNylxauHEk=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useMemo","Slider","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s2","_s","$RefreshSig$","popularMovies","setPopularMovies","topRatedMovies","setTopRatedMovies","upcomingMovies","setUpcomingMovies","romanceMovies","setRomanceMovies","kidMovies","setKidMovies","dramaMovies","setDramaMovies","horrorMovies","setHorrorMovies","adventureMovies","setAdventureMovies","searchResults","setSearchResults","searchQuery","setSearchQuery","loading","setLoading","error","setError","favorites","setFavorites","mediaType","setMediaType","navigate","options","method","headers","accept","Authorization","fetchFavorites","token","localStorage","getItem","response","fetch","ok","data","json","console","fetchMoviesByGenre","genreId","setMovies","allMovies","page","Error","push","results","message","toggleFavorite","movie","movieIdStr","id","toString","isFavorite","some","fav","movieId","body","JSON","stringify","movieData","fetchSearchResults","query","type","endpoint","searchResponse","searchData","filteredResults","filter","genre_ids","includes","fetchMovies","category","setCategory","delayDebounce","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sliderSettings","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","MovieList","title","movies","map","MovieItem","onClick","viewBox","d","src","poster_path","alt","release_date","handleLogout","removeItem","placeholder","value","onChange","e","target","length","_c","$RefreshReg$"],"sources":["C:/Users/steve/Documents/Dev/Tek3/part-time/B-PRO-500-NCE-5-1-professionalwork-steven.deffontaine/epikodi/epikodi/frontend/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { useNavigate } from 'react-router-dom';\n\nconst Dashboard = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [topRatedMovies, setTopRatedMovies] = useState([]);\n  const [upcomingMovies, setUpcomingMovies] = useState([]);\n  const [romanceMovies, setRomanceMovies] = useState([]);\n  const [kidMovies, setKidMovies] = useState([]);\n  const [dramaMovies, setDramaMovies] = useState([]);\n  const [horrorMovies, setHorrorMovies] = useState([]);\n  const [adventureMovies, setAdventureMovies] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const [mediaType, setMediaType] = useState('all');\n  const navigate = useNavigate();\n\n  const options = useMemo(() => ({\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMjIxMzZjYmRhNGE3NDkwMWIwMjNkMjA2NWY3ZDRiMCIsIm5iZiI6MTcyNjY2NzcyMC4wMjM4MjYsInN1YiI6IjY2ZWFkOTJlNWMwNTE5YTIzNGQzNjY2NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IHCx_EGrz_W_UfYue4zUZZM5uGcz7bYvQDl8ym_E7vw',\n    }\n  }), []);\n\n  const fetchFavorites = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/favorites', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setFavorites(data);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des favoris:', error);\n    }\n  };\n\n  const fetchMoviesByGenre = useCallback(async (genreId, setMovies) => {\n    try {\n      const allMovies = [];\n      for (let page = 1; page <= 5; page++) {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/discover/movie?language=fr-FR&page=${page}&with_genres=${genreId}`,\n          options\n        );\n        if (!response.ok) {\n          throw new Error('Erreur lors de la récupération des films par genre');\n        }\n        const data = await response.json();\n        allMovies.push(...data.results);\n      }\n      setMovies(allMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, [options]);\n\n  const toggleFavorite = async (movie) => {\n    try {\n      const token = localStorage.getItem('token');\n      const movieIdStr = movie.id.toString();\n      const isFavorite = favorites.some(fav => fav.movieId === movieIdStr);\n      \n      if (isFavorite) {\n        const response = await fetch(`http://localhost:5000/api/favorites/${movieIdStr}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        \n        if (!response.ok) {\n          throw new Error('Erreur lors de la suppression du favori');\n        }\n      } else {\n        const response = await fetch('http://localhost:5000/api/favorites', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            movieId: movieIdStr,\n            movieData: movie\n          })\n        });\n        \n        if (!response.ok) {\n          throw new Error('Erreur lors de l\\'ajout du favori');\n        }\n      }\n      \n      await fetchFavorites();\n    } catch (error) {\n      console.error('Erreur lors de la modification des favoris:', error);\n    }\n  };\n\n  const fetchSearchResults = useCallback(async (query, type) => {\n    if (!query) {\n      setSearchResults([]);\n      return;\n    }\n    \n    try {\n      let endpoint = '';\n      if (type === 'all') {\n        endpoint = `/search/multi?query=${query}&language=fr-FR`;\n      } else if (type === 'movie') {\n        endpoint = `/search/movie?query=${query}&language=fr-FR`;\n      } else if (type === 'tv') {\n        endpoint = `/search/tv?query=${query}&language=fr-FR`;\n      } else if (type === 'documentary' || type === 'animation') {\n        const searchResponse = await fetch(\n          `https://api.themoviedb.org/3/search/movie?query=${query}&language=fr-FR`,\n          options\n        );\n        const searchData = await searchResponse.json();\n        \n        const genreId = type === 'documentary' ? 99 : 16;\n        const filteredResults = searchData.results.filter(movie => \n          movie.genre_ids && movie.genre_ids.includes(genreId)\n        );\n        \n        setSearchResults(filteredResults);\n        return;\n      }\n\n      const response = await fetch(`https://api.themoviedb.org/3${endpoint}`, options);\n      const data = await response.json();\n      setSearchResults(data.results || []);\n    } catch (error) {\n      console.error('Erreur lors de la recherche:', error);\n      setError('Erreur lors de la recherche');\n      setSearchResults([]);\n    }\n  }, [options]);\n\n  const fetchMovies = useCallback(async (category, setCategory) => {\n    try {\n      const allMovies = [];\n      for (let page = 1; page <= 10; page++) {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${category}?language=fr-FR&page=${page}`,\n          options\n        );\n        if (!response.ok) {\n          throw new Error('Erreur lors de la récupération des données');\n        }\n        const data = await response.json();\n        allMovies.push(...data.results);\n      }\n      setCategory(allMovies);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setLoading(false);\n    }\n  }, [options]);\n\n  useEffect(() => {\n    const delayDebounce = setTimeout(() => {\n      if (searchQuery) {\n        fetchSearchResults(searchQuery, mediaType);\n      }\n    }, 500);\n\n    return () => clearTimeout(delayDebounce);\n  }, [searchQuery, mediaType, fetchSearchResults]);\n\n  useEffect(() => {\n    fetchMovies('popular', setPopularMovies);\n    fetchMovies('top_rated', setTopRatedMovies);\n    fetchMovies('upcoming', setUpcomingMovies);\n    fetchMoviesByGenre(10749, setRomanceMovies); // Genre ID pour Romance\n    fetchMoviesByGenre(16, setKidMovies); // Genre ID pour Animation (Kid-friendly)\n    fetchMoviesByGenre(18, setDramaMovies); // Genre ID pour Drame\n    fetchMoviesByGenre(27, setHorrorMovies); // Genre ID pour Horreur\n    fetchMoviesByGenre(12, setAdventureMovies); // Genre ID pour Aventure\n    fetchFavorites();\n  }, [fetchMovies, fetchMoviesByGenre]);\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <div className=\"loading-text\">Chargement des films...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p>Erreur: {error}</p>;\n  }\n\n  const sliderSettings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 6,\n    slidesToScroll: 6,\n    responsive: [\n      {\n        breakpoint: 1400,\n        settings: {\n          slidesToShow: 5,\n          slidesToScroll: 5,\n        }\n      },\n      {\n        breakpoint: 1200,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 4,\n        }\n      },\n      {\n        breakpoint: 992,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n        }\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        }\n      }\n    ]\n  };\n\n  const MovieList = ({ title, movies }) => (\n    <div className=\"slider-container\">\n      <h2>{title}</h2>\n      <Slider {...sliderSettings}>\n        {movies.map(movie => (\n          <MovieItem key={movie.id} movie={movie} />\n        ))}\n      </Slider>\n    </div>\n  );\n\n  const MovieItem = ({ movie }) => {\n    const navigate = useNavigate();\n    const isFavorite = favorites.some(fav => fav.movieId === movie.id.toString());\n    \n    return (\n      <div className=\"movie-item\">\n        <button \n          className={`favorite-button ${isFavorite ? 'active' : ''}`}\n          onClick={() => toggleFavorite(movie)}\n        >\n          <svg viewBox=\"0 0 24 24\">\n            <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/>\n          </svg>\n        </button>\n        <button \n          className=\"details-button\"\n          onClick={() => navigate(`/movie/${movie.id}`)}\n        >\n          <i className=\"fas fa-info\"></i>\n        </button>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n          className=\"movie-poster\"\n        />\n        <div className=\"movie-details\">\n          <div className=\"movie-title\">{movie.title}</div>\n          <div className=\"movie-release-date\">\n            Date de sortie : {movie.release_date}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"logout-container\">\n        <button onClick={handleLogout} className=\"logout-button\">\n          Déconnexion\n        </button>\n      </div>\n      \n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          className=\"search-input\"\n          placeholder=\"Rechercher...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n        <select \n          className=\"type-select\"\n          value={mediaType}\n          onChange={(e) => setMediaType(e.target.value)}\n        >\n          <option value=\"all\">Tout</option>\n          <option value=\"movie\">Films</option>\n          <option value=\"tv\">Séries</option>\n          <option value=\"documentary\">Documentaires</option>\n          <option value=\"animation\">Animation</option>\n        </select>\n      </div>\n\n      {searchQuery && searchResults.length > 0 ? (\n        <MovieList title=\"Résultats de la recherche\" movies={searchResults} />\n      ) : searchQuery ? (\n        <p className=\"no-results\">Aucun résultat trouvé</p>\n      ) : (\n        <>\n          {favorites.length > 0 && (\n            <MovieList title=\"Mes Favoris\" movies={favorites.map(fav => fav.movieData)} />\n          )}\n          <MovieList title=\"Films Populaires\" movies={popularMovies} />\n          <MovieList title=\"Les Mieux Notés\" movies={topRatedMovies} />\n          {/* <MovieList title=\"Prochaines Sorties\" movies={upcomingMovies} />     */}\n          <MovieList title=\"Romance\" movies={romanceMovies} />\n          <MovieList title=\"Animation pour les enfants\" movies={kidMovies} />\n          <MovieList title=\"Drame\" movies={dramaMovies} />\n          <MovieList title=\"Horreur\" movies={horrorMovies} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}